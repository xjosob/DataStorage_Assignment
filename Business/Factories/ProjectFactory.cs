using Business.Helpers;
using Business.Models;
using Data.Entities;
using Microsoft.EntityFrameworkCore;

namespace Business.Factories
{
    public class ProjectFactory(DbContext context)
    {
        private readonly DbContext _context =
            context ?? throw new ArgumentNullException(nameof(context));
        private readonly ProjectIdGeneratorHelper _projectIdGeneratorHelper = new(context);

        public async Task<ProjectEntity> CreateAsync(ProjectCreationForm form)
        {
            #region // Validation generated by ChatGPT. Checks if status exists.
            var status =
                _context.Set<StatusTypeEntity>().FirstOrDefault(s => s.Id == form.StatusId)
                ?? throw new InvalidOperationException(
                    $"Status with ID {form.StatusId} not found."
                );
            string projectId = await _projectIdGeneratorHelper.GenerateUniqueProjectIdAsync();
            #endregion

            return new ProjectEntity
            {
                Id = projectId,
                ProjectName = form.ProjectName,
                ProjectDescription = form.ProjectDescription,
                StartDate = form.StartDate,
                EndDate = form.EndDate,
                CustomerId = form.CustomerId,
                StatusId = form.StatusId,
                Status = status,
            };
        }
    }
}
